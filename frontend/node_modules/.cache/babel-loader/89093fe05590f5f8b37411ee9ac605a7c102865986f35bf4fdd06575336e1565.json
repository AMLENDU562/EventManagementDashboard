{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Amlendu Kumar\\\\Desktop\\\\EventManagment\\\\frontend\\\\src\\\\Pages\\\\TaskTracker.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport '../styles/taskDashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TaskDashboard() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [newTask, setNewTask] = useState('');\n  const [loading, setLoading] = useState(false);\n  const fetchTasks = async () => {\n    setLoading(true);\n    try {\n      const response = await axios.get('http://localhost:5000/api/getTasks');\n      setTasks(response.data);\n    } catch (error) {\n      console.error('Error fetching tasks:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const addTask = async () => {\n    if (!newTask.trim()) return alert('Task description cannot be empty!');\n    try {\n      await axios.post('http://localhost:5000/api/postTask', {\n        description: newTask\n      });\n      setNewTask('');\n      fetchTasks(); // Refresh tasks\n    } catch (error) {\n      console.error('Error adding task:', error);\n    }\n  };\n  const deleteTask = async taskId => {\n    try {\n      await axios.delete('http://localhost:5000/api/deleteTask', {\n        data: {\n          id: taskId\n        }\n      });\n      fetchTasks(); // Refresh tasks\n    } catch (error) {\n      console.error('Error deleting task:', error);\n    }\n  };\n  const changeTaskStatus = async (taskId, status) => {\n    try {\n      await axios.put('http://localhost:5000/api/changeTaskStatus', {\n        id: taskId,\n        status: !status\n      });\n      fetchTasks(); // Refresh tasks\n    } catch (error) {\n      console.error('Error updating task status:', error);\n    }\n  };\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task-dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Task Management Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-task\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newTask,\n        onChange: e => setNewTask(e.target.value),\n        placeholder: \"Enter new task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addTask,\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading tasks...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-list\",\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"task-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: task.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Status: \", task.status ? 'Completed' : 'Pending']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"task-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => changeTaskStatus(task.id, task.status),\n            children: task.status ? 'Mark Pending' : 'Mark Completed'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => deleteTask(task.id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 15\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskDashboard, \"7Fog7GhNmK3OUp142ADMk/sqPUw=\");\n_c = TaskDashboard;\nvar _c;\n$RefreshReg$(_c, \"TaskDashboard\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","TaskDashboard","_s","tasks","setTasks","newTask","setNewTask","loading","setLoading","fetchTasks","response","get","data","error","console","addTask","trim","alert","post","description","deleteTask","taskId","delete","id","changeTaskStatus","status","put","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","map","task","_c","$RefreshReg$"],"sources":["C:/Users/Amlendu Kumar/Desktop/EventManagment/frontend/src/Pages/TaskTracker.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport '../styles/taskDashboard.css';\r\n\r\nexport default function TaskDashboard() {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [newTask, setNewTask] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const fetchTasks = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await axios.get('http://localhost:5000/api/getTasks');\r\n      setTasks(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching tasks:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const addTask = async () => {\r\n    if (!newTask.trim()) return alert('Task description cannot be empty!');\r\n    try {\r\n      await axios.post('http://localhost:5000/api/postTask', { description: newTask });\r\n      setNewTask('');\r\n      fetchTasks(); // Refresh tasks\r\n    } catch (error) {\r\n      console.error('Error adding task:', error);\r\n    }\r\n  };\r\n\r\n  const deleteTask = async (taskId) => {\r\n    try {\r\n      await axios.delete('http://localhost:5000/api/deleteTask', { data: { id: taskId } });\r\n      fetchTasks(); // Refresh tasks\r\n    } catch (error) {\r\n      console.error('Error deleting task:', error);\r\n    }\r\n  };\r\n\r\n  const changeTaskStatus = async (taskId, status) => {\r\n    try {\r\n      await axios.put('http://localhost:5000/api/changeTaskStatus', { id: taskId, status: !status });\r\n      fetchTasks(); // Refresh tasks\r\n    } catch (error) {\r\n      console.error('Error updating task status:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchTasks();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"task-dashboard\">\r\n      <h1>Task Management Dashboard</h1>\r\n      <div className=\"add-task\">\r\n        <input\r\n          type=\"text\"\r\n          value={newTask}\r\n          onChange={(e) => setNewTask(e.target.value)}\r\n          placeholder=\"Enter new task\"\r\n        />\r\n        <button onClick={addTask}>Add Task</button>\r\n      </div>\r\n      {loading ? (\r\n        <p>Loading tasks...</p>\r\n      ) : (\r\n        <div className=\"task-list\">\r\n          {tasks.map((task) => (\r\n            <div className=\"task-card\" key={task.id}>\r\n              <div className=\"task-details\">\r\n                <p>{task.description}</p>\r\n                <p>Status: {task.status ? 'Completed' : 'Pending'}</p>\r\n              </div>\r\n              <div className=\"task-actions\">\r\n                <button onClick={() => changeTaskStatus(task.id, task.status)}>\r\n                  {task.status ? 'Mark Pending' : 'Mark Completed'}\r\n                </button>\r\n                <button onClick={() => deleteTask(task.id)}>Delete</button>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}