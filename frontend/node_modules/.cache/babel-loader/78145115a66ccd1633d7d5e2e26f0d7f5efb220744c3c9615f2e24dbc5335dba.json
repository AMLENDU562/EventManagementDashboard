{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Amlendu Kumar\\\\Desktop\\\\EventManagment\\\\frontend\\\\src\\\\Pages\\\\TaskTracker.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport '../styles/taskDashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TaskTracker() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [taskForm, setTaskForm] = useState({\n    name: '',\n    deadline: '',\n    status: false,\n    event: ''\n  });\n  const [editingTaskId, setEditingTaskId] = useState(null);\n\n  // Fetch tasks from the backend\n  const fetchTasks = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/getTasks');\n      setTasks(response.data);\n    } catch (error) {\n      console.error('Error fetching tasks:', error);\n    }\n  };\n\n  // Add a new task\n  const addTask = async e => {\n    e.preventDefault();\n    try {\n      await axios.post('http://localhost:5000/api/postTask', taskForm);\n      setTaskForm({\n        name: '',\n        deadline: '',\n        status: false,\n        event: ''\n      });\n      fetchTasks();\n    } catch (error) {\n      console.error('Error adding task:', error);\n    }\n  };\n\n  // Update an existing task\n  const updateTask = async e => {\n    e.preventDefault();\n    try {\n      await axios.put(`http://localhost:5000/api/updateTask/${editingTaskId}`, taskForm);\n      setTaskForm({\n        name: '',\n        deadline: '',\n        status: false,\n        event: ''\n      });\n      setEditingTaskId(null);\n      fetchTasks();\n    } catch (error) {\n      console.error('Error updating task:', error);\n    }\n  };\n\n  // Delete a task\n  const deleteTask = async name => {\n    try {\n      await axios.delete(`http://localhost:5000/api/deleteTask/${name}`);\n      fetchTasks();\n    } catch (error) {\n      console.error('Error deleting task:', error);\n    }\n  };\n\n  // Handle form input change\n  const handleInputChange = e => {\n    const {\n      name,\n      value,\n      type,\n      checked\n    } = e.target;\n    setTaskForm({\n      ...taskForm,\n      [name]: type === 'checkbox' ? checked : value\n    });\n  };\n\n  // Load tasks on component mount\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Task Management Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"task-form\",\n      onSubmit: editingTaskId ? updateTask : addTask,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        placeholder: \"Task Name\",\n        value: taskForm.name,\n        onChange: handleInputChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        name: \"deadline\",\n        value: taskForm.deadline,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"event\",\n        placeholder: \"Event Name\",\n        value: taskForm.event,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: editingTaskId ? 'Update Task' : 'Add Task'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-list\",\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: task.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Deadline: \", task.deadline ? new Date(task.deadline).toLocaleDateString() : 'No deadline']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Status: \", task.status ? 'Completed' : 'Pending']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Event ID: \", task.event || 'Unlinked']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            setTaskForm({\n              name: task.name,\n              deadline: task.deadline ? new Date(task.deadline).toISOString().split('T')[0] : '',\n              status: task.status,\n              event: task.event || ''\n            });\n            setEditingTaskId(task._id);\n          },\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteTask(task.name),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this)]\n      }, task._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskTracker, \"KDw7f5pL52x8ZRMUibN5atJFopU=\");\n_c = TaskTracker;\nvar _c;\n$RefreshReg$(_c, \"TaskTracker\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","TaskTracker","_s","tasks","setTasks","taskForm","setTaskForm","name","deadline","status","event","editingTaskId","setEditingTaskId","fetchTasks","response","get","data","error","console","addTask","e","preventDefault","post","updateTask","put","deleteTask","delete","handleInputChange","value","type","checked","target","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","placeholder","onChange","required","map","task","Date","toLocaleDateString","onClick","toISOString","split","_id","_c","$RefreshReg$"],"sources":["C:/Users/Amlendu Kumar/Desktop/EventManagment/frontend/src/Pages/TaskTracker.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport '../styles/taskDashboard.css';\r\n\r\nexport default function TaskTracker() {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [taskForm, setTaskForm] = useState({ name: '', deadline: '', status: false, event: '' });\r\n  const [editingTaskId, setEditingTaskId] = useState(null);\r\n\r\n  // Fetch tasks from the backend\r\n  const fetchTasks = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:5000/api/getTasks');\r\n      setTasks(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching tasks:', error);\r\n    }\r\n  };\r\n\r\n  // Add a new task\r\n  const addTask = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await axios.post('http://localhost:5000/api/postTask', taskForm);\r\n      setTaskForm({ name: '', deadline: '', status: false, event: '' });\r\n      fetchTasks();\r\n    } catch (error) {\r\n      console.error('Error adding task:', error);\r\n    }\r\n  };\r\n\r\n  // Update an existing task\r\n  const updateTask = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await axios.put(`http://localhost:5000/api/updateTask/${editingTaskId}`, taskForm);\r\n      setTaskForm({ name: '', deadline: '', status: false, event: '' });\r\n      setEditingTaskId(null);\r\n      fetchTasks();\r\n    } catch (error) {\r\n      console.error('Error updating task:', error);\r\n    }\r\n  };\r\n\r\n  // Delete a task\r\n  const deleteTask = async (name) => {\r\n    try {\r\n      await axios.delete(`http://localhost:5000/api/deleteTask/${name}`);\r\n      fetchTasks();\r\n    } catch (error) {\r\n      console.error('Error deleting task:', error);\r\n    }\r\n  };\r\n\r\n  // Handle form input change\r\n  const handleInputChange = (e) => {\r\n    const { name, value, type, checked } = e.target;\r\n    setTaskForm({\r\n      ...taskForm,\r\n      [name]: type === 'checkbox' ? checked : value,\r\n    });\r\n  };\r\n\r\n  // Load tasks on component mount\r\n  useEffect(() => {\r\n    fetchTasks();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      <h1>Task Management Dashboard</h1>\r\n\r\n      <form className=\"task-form\" onSubmit={editingTaskId ? updateTask : addTask}>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          placeholder=\"Task Name\"\r\n          value={taskForm.name}\r\n          onChange={handleInputChange}\r\n          required\r\n        />\r\n        <input\r\n          type=\"date\"\r\n          name=\"deadline\"\r\n          value={taskForm.deadline}\r\n          onChange={handleInputChange}\r\n        />\r\n        \r\n        <input\r\n          type=\"text\"\r\n          name=\"event\"\r\n          placeholder=\"Event Name\"\r\n          value={taskForm.event}\r\n          onChange={handleInputChange}\r\n        />\r\n        <button type=\"submit\">{editingTaskId ? 'Update Task' : 'Add Task'}</button>\r\n      </form>\r\n\r\n      <div className=\"task-list\">\r\n        {tasks.map((task) => (\r\n          <div key={task._id} className=\"task-card\">\r\n            <h3>{task.name}</h3>\r\n            <p>Deadline: {task.deadline ? new Date(task.deadline).toLocaleDateString() : 'No deadline'}</p>\r\n            <p>Status: {task.status ? 'Completed' : 'Pending'}</p>\r\n            <p>Event ID: {task.event || 'Unlinked'}</p>\r\n            <button onClick={() => {\r\n              setTaskForm({\r\n                name: task.name,\r\n                deadline: task.deadline ? new Date(task.deadline).toISOString().split('T')[0] : '',\r\n                status: task.status,\r\n                event: task.event || '',\r\n              });\r\n              setEditingTaskId(task._id);\r\n            }}>\r\n              Edit\r\n            </button>\r\n            <button onClick={() => deleteTask(task.name)}>Delete</button>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}