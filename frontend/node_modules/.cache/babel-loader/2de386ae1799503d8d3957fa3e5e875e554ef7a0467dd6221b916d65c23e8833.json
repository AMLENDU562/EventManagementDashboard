{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Amlendu Kumar\\\\Desktop\\\\Calculator\\\\EventManagementDashboard\\\\frontend\\\\src\\\\Pages\\\\Event.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport '../styles/Event.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Event() {\n  _s();\n  const [events, setEvents] = useState([]);\n  const [tasks, setTasks] = useState({});\n  const [editingEventName, setEditingEventName] = useState(null);\n  const [editField, setEditField] = useState('');\n  const [editValue, setEditValue] = useState('');\n  const [newEvent, setNewEvent] = useState({\n    name: '',\n    date: '',\n    location: '',\n    description: ''\n  });\n  useEffect(() => {\n    fetchEvents();\n  }, []);\n  const fetchEvents = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/getEvents');\n      setEvents(response.data);\n    } catch (error) {\n      console.error('Error fetching events:', error);\n    }\n  };\n  const fetchTasksForEvent = async eventName => {\n    try {\n      console.log(eventName);\n      const response = await axios.get('http://localhost:5000/api/getEventTasks', {\n        params: {\n          name: eventName\n        }\n      });\n      setTasks(prevTasks => ({\n        ...prevTasks,\n        [eventName]: response.data\n      }));\n    } catch (error) {\n      console.error('Error fetching tasks for event:', error);\n    }\n  };\n  const toggleTasks = eventName => {\n    if (tasks[eventName]) {\n      setTasks(prevTasks => {\n        const updatedTasks = {\n          ...prevTasks\n        };\n        delete updatedTasks[eventName];\n        return updatedTasks;\n      });\n    } else fetchTasksForEvent(eventName);\n  };\n  const deleteTask = async eventName => {\n    try {\n      await axios.delete('http://localhost:5000/api/deleteEventTask', {\n        data: {\n          name: eventName\n        }\n      });\n      fetchTasksForEvent(eventName);\n    } catch (error) {\n      console.error('Error deleting task:', error);\n    }\n  };\n  const deleteEvent = async eventName => {\n    try {\n      await axios.delete('http://localhost:5000/api/deleteEvent', {\n        data: {\n          name: eventName\n        }\n      });\n      fetchEvents();\n    } catch (error) {\n      console.error('Error deleting event:', error);\n    }\n  };\n  const updateEvent = async () => {\n    let endpoint = '';\n    switch (editField) {\n      case 'date':\n        endpoint = 'http://localhost:5000/api/updateEventDate';\n        break;\n      case 'description':\n        endpoint = 'http://localhost:5000/api/updateEventDescription';\n        break;\n      case 'location':\n        endpoint = 'http://localhost:5000/api/updateEventLocation';\n        break;\n      default:\n        console.error('Invalid edit field');\n        return;\n    }\n    try {\n      await axios.put(endpoint, {\n        name: editingEventName,\n        [editField]: editValue\n      });\n      fetchEvents();\n      cancelEditing();\n    } catch (error) {\n      console.error(`Error updating event ${editField}:`, error);\n    }\n  };\n  const addEvent = async () => {\n    try {\n      if (!newEvent.name || !newEvent.date || !newEvent.location || !newEvent.description) {\n        alert('All fields are required!');\n        return;\n      }\n      await axios.post('http://localhost:5000/api/postEvent', newEvent);\n      fetchEvents();\n      setNewEvent({\n        name: '',\n        date: '',\n        location: '',\n        description: ''\n      });\n    } catch (error) {\n      console.error('Error adding event:', error);\n    }\n  };\n  const startEditing = (eventName, field, currentValue) => {\n    setEditingEventName(eventName);\n    setEditField(field);\n    setEditValue(currentValue);\n  };\n  const cancelEditing = () => {\n    setEditingEventName(null);\n    setEditField('');\n    setEditValue('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"event-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Event Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-event-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add New Event\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Event Name\",\n        value: newEvent.name,\n        onChange: e => setNewEvent({\n          ...newEvent,\n          name: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: newEvent.date,\n        onChange: e => setNewEvent({\n          ...newEvent,\n          date: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Location\",\n        value: newEvent.location,\n        onChange: e => setNewEvent({\n          ...newEvent,\n          location: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Description\",\n        value: newEvent.description,\n        onChange: e => setNewEvent({\n          ...newEvent,\n          description: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addEvent,\n        children: \"Add Event\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"event-table\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Location\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: events.map(event => /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: event.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: editingEventName === event.name && editField === 'date' ? /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"date\",\n                  value: editValue,\n                  onChange: e => setEditValue(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 23\n                }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [new Date(event.date).toLocaleDateString(), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => startEditing(event.name, 'date', event.date),\n                    children: \"Edit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 191,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: editingEventName === event.name && editField === 'location' ? /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: editValue,\n                  onChange: e => setEditValue(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 23\n                }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [event.location, /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => startEditing(event.name, 'location', event.location),\n                    children: \"Edit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 205,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: editingEventName === event.name && editField === 'description' ? /*#__PURE__*/_jsxDEV(\"textarea\", {\n                  value: editValue,\n                  onChange: e => setEditValue(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 211,\n                  columnNumber: 23\n                }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [event.description, /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => startEditing(event.name, 'description', event.description),\n                    children: \"Edit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 215,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: editingEventName === event.name ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: updateEvent,\n                    children: \"Save\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 226,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: cancelEditing,\n                    children: \"Cancel\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 227,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => toggleTasks(event.name),\n                    children: tasks[event.name] ? 'Hide Tasks' : 'Show Tasks'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 231,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => deleteEvent(event.name),\n                    children: \"Delete Event\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 234,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 17\n            }, this), tasks[event.name] && /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                colSpan: \"5\",\n                children: /*#__PURE__*/_jsxDEV(\"table\", {\n                  className: \"task-table\",\n                  children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                    children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                        children: \"Task Name\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 245,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: \"Deadline\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 246,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: \"Status\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 247,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: \"Actions\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 248,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 244,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 243,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                    children: tasks[event.name].map(task => /*#__PURE__*/_jsxDEV(\"tr\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                        children: task.name\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 255,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: task.deadline\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 256,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 257,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: /*#__PURE__*/_jsxDEV(\"button\", {\n                          onClick: () => deleteTask(task.name),\n                          children: \"Delete Task\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 259,\n                          columnNumber: 33\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 258,\n                        columnNumber: 31\n                      }, this)]\n                    }, task._id, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 254,\n                      columnNumber: 29\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 252,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 242,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 19\n            }, this)]\n          }, event._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 5\n  }, this);\n}\n_s(Event, \"lge9H47eXAAUl3Kbp7R2bYI5Z/c=\");\n_c = Event;\nvar _c;\n$RefreshReg$(_c, \"Event\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Event","_s","events","setEvents","tasks","setTasks","editingEventName","setEditingEventName","editField","setEditField","editValue","setEditValue","newEvent","setNewEvent","name","date","location","description","fetchEvents","response","get","data","error","console","fetchTasksForEvent","eventName","log","params","prevTasks","toggleTasks","updatedTasks","deleteTask","delete","deleteEvent","updateEvent","endpoint","put","cancelEditing","addEvent","alert","post","startEditing","field","currentValue","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","map","event","Date","toLocaleDateString","colSpan","task","deadline","_id","_c","$RefreshReg$"],"sources":["C:/Users/Amlendu Kumar/Desktop/Calculator/EventManagementDashboard/frontend/src/Pages/Event.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport '../styles/Event.css';\r\n\r\nexport default function Event() {\r\n  const [events, setEvents] = useState([]);\r\n  const [tasks, setTasks] = useState({});\r\n  const [editingEventName, setEditingEventName] = useState(null);\r\n  const [editField, setEditField] = useState('');\r\n  const [editValue, setEditValue] = useState('');\r\n  const [newEvent, setNewEvent] = useState({\r\n    name: '',\r\n    date: '',\r\n    location: '',\r\n    description: '',\r\n  });\r\n\r\n  useEffect(() => {\r\n    fetchEvents();\r\n  }, []);\r\n\r\n  const fetchEvents = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:5000/api/getEvents');\r\n      setEvents(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching events:', error);\r\n    }\r\n  };\r\n\r\n  const fetchTasksForEvent = async (eventName) => {\r\n    try {\r\n      console.log(eventName);\r\n      const response = await axios.get('http://localhost:5000/api/getEventTasks',{params: {\r\n        name: eventName\r\n      }});\r\n      setTasks((prevTasks) => ({\r\n        ...prevTasks,\r\n        [eventName]: response.data,\r\n      }));\r\n    } catch (error) {\r\n      console.error('Error fetching tasks for event:', error);\r\n    }\r\n  };\r\n\r\n  const toggleTasks = (eventName) => {\r\n    if (tasks[eventName]) {\r\n      setTasks((prevTasks) => {\r\n        const updatedTasks = { ...prevTasks };\r\n        delete updatedTasks[eventName];\r\n        return updatedTasks;\r\n      });\r\n    }\r\n\r\n    else\r\n      fetchTasksForEvent(eventName);\r\n    \r\n  };\r\n\r\n  const deleteTask = async (eventName) => {\r\n    try {\r\n      await axios.delete('http://localhost:5000/api/deleteEventTask', {\r\n        data: { name:eventName},\r\n      });\r\n      fetchTasksForEvent(eventName);\r\n    } catch (error) {\r\n      console.error('Error deleting task:', error);\r\n    }\r\n  };\r\n\r\n  const deleteEvent = async (eventName) => {\r\n    try {\r\n      await axios.delete('http://localhost:5000/api/deleteEvent', {\r\n        data: { name: eventName },\r\n      });\r\n      fetchEvents();\r\n    } catch (error) {\r\n      console.error('Error deleting event:', error);\r\n    }\r\n  };\r\n\r\n  const updateEvent = async () => {\r\n    let endpoint = '';\r\n    switch (editField) {\r\n      case 'date':\r\n        endpoint = 'http://localhost:5000/api/updateEventDate';\r\n        break;\r\n      case 'description':\r\n        endpoint = 'http://localhost:5000/api/updateEventDescription';\r\n        break;\r\n      case 'location':\r\n        endpoint = 'http://localhost:5000/api/updateEventLocation';\r\n        break;\r\n      default:\r\n        console.error('Invalid edit field');\r\n        return;\r\n    }\r\n    try {\r\n      await axios.put(endpoint, { name: editingEventName, [editField]: editValue });\r\n      fetchEvents();\r\n      cancelEditing();\r\n    } catch (error) {\r\n      console.error(`Error updating event ${editField}:`, error);\r\n    }\r\n  };\r\n\r\n  const addEvent = async () => {\r\n    try {\r\n      if (!newEvent.name || !newEvent.date || !newEvent.location || !newEvent.description) {\r\n        alert('All fields are required!');\r\n        return;\r\n      }\r\n      await axios.post('http://localhost:5000/api/postEvent', newEvent);\r\n      fetchEvents();\r\n      setNewEvent({ name: '', date: '', location: '', description: '' });\r\n    } catch (error) {\r\n      console.error('Error adding event:', error);\r\n    }\r\n  };\r\n\r\n  const startEditing = (eventName, field, currentValue) => {\r\n    setEditingEventName(eventName);\r\n    setEditField(field);\r\n    setEditValue(currentValue);\r\n  };\r\n\r\n  const cancelEditing = () => {\r\n    setEditingEventName(null);\r\n    setEditField('');\r\n    setEditValue('');\r\n  };\r\n\r\n  return (\r\n    <div className=\"event-page\">\r\n      <h1>Event Management</h1>\r\n\r\n      <div className=\"add-event-form\">\r\n        <h2>Add New Event</h2>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Event Name\"\r\n          value={newEvent.name}\r\n          onChange={(e) => setNewEvent({ ...newEvent, name: e.target.value })}\r\n        />\r\n        <input\r\n          type=\"date\"\r\n          value={newEvent.date}\r\n          onChange={(e) => setNewEvent({ ...newEvent, date: e.target.value })}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Location\"\r\n          value={newEvent.location}\r\n          onChange={(e) => setNewEvent({ ...newEvent, location: e.target.value })}\r\n        />\r\n        <textarea\r\n          placeholder=\"Description\"\r\n          value={newEvent.description}\r\n          onChange={(e) => setNewEvent({ ...newEvent, description: e.target.value })}\r\n        ></textarea>\r\n        <button onClick={addEvent}>Add Event</button>\r\n      </div>\r\n\r\n      <div className=\"event-table\">\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Name</th>\r\n              <th>Date</th>\r\n              <th>Location</th>\r\n              <th>Description</th>\r\n              <th>Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {events.map((event) => (\r\n              \r\n              <React.Fragment key={event._id}>\r\n                <tr>\r\n                  <td>{event.name}</td>\r\n                  <td>\r\n                    {editingEventName === event.name && editField === 'date' ? (\r\n                      <input\r\n                        type=\"date\"\r\n                        value={editValue}\r\n                        onChange={(e) => setEditValue(e.target.value)}\r\n                      />\r\n                    ) : (\r\n                      <>\r\n                        {new Date(event.date).toLocaleDateString()}\r\n                        <button onClick={() => startEditing(event.name, 'date', event.date)}>Edit</button>\r\n                      </>\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    {editingEventName === event.name && editField === 'location' ? (\r\n                      <input\r\n                        type=\"text\"\r\n                        value={editValue}\r\n                        onChange={(e) => setEditValue(e.target.value)}\r\n                      />\r\n                    ) : (\r\n                      <>\r\n                        {event.location}\r\n                        <button onClick={() => startEditing(event.name, 'location', event.location)}>Edit</button>\r\n                      </>\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    {editingEventName === event.name && editField === 'description' ? (\r\n                      <textarea value={editValue} onChange={(e) => setEditValue(e.target.value)} />\r\n                    ) : (\r\n                      <>\r\n                        {event.description}\r\n                        <button\r\n                          onClick={() => startEditing(event.name, 'description', event.description)}\r\n                        >\r\n                          Edit\r\n                        </button>\r\n                      </>\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    {editingEventName === event.name ? (\r\n                      <>\r\n                        <button onClick={updateEvent}>Save</button>\r\n                        <button onClick={cancelEditing}>Cancel</button>\r\n                      </>\r\n                    ) : (\r\n                      <>\r\n                        <button onClick={() => toggleTasks(event.name)}>\r\n                          {tasks[event.name] ? 'Hide Tasks' : 'Show Tasks'}\r\n                        </button>\r\n                        <button onClick={() => deleteEvent(event.name)}>Delete Event</button>\r\n                      </>\r\n                    )}\r\n                  </td>\r\n                </tr>\r\n                {tasks[event.name] && (\r\n                  <tr>\r\n                    <td colSpan=\"5\">\r\n                      <table className=\"task-table\">\r\n                        <thead>\r\n                          <tr>\r\n                            <th>Task Name</th>\r\n                            <th>Deadline</th>\r\n                            <th>Status</th>\r\n                            <th>Actions</th>\r\n                            \r\n                          </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                          {tasks[event.name].map((task) => (\r\n                            <tr key={task._id}>\r\n                              <td>{task.name}</td>\r\n                              <td>{task.deadline}</td>\r\n                              <td></td>\r\n                              <td>\r\n                                <button onClick={() => deleteTask(task.name)}>Delete Task</button>\r\n                              </td>\r\n                            </tr>\r\n                          ))}\r\n                        </tbody>\r\n                      </table>\r\n                    </td>\r\n                  </tr>\r\n                )}\r\n              </React.Fragment>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}